{"version":3,"sources":["assets/images/preloader.svg","components/common/Filter/Filter.module.css","components/common/FormsControls/FormsControls.module.css","components/Pokemons/Pokemons.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","redux/auth-reducer.js","components/Login/Login.jsx","components/OTP/OTP.jsx","api/api.js","redux/pokemonPage-reducer.js","components/common/Preloader/Preloader.js","components/Header/Header.jsx","components/PokemonPage/PokemonPage.jsx","components/PokemonPage/PokemonPageContainer.js","redux/pokemons-reducer.js","redux/pokemons-selector.js","components/common/Filter/Filter.jsx","components/common/Paginator/Paginator.jsx","components/Pokemons/Pokemon/Pokemon.jsx","components/Pokemons/Pokemons.jsx","components/Pokemons/PokemonsContainer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/PokemonPage/PokemonPage.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","Element","input","meta","touched","error","props","hasError","className","styles","formControl","Input","createField","placeholder","name","validators","component","text","field","Field","validate","required","value","initialState","login","token","correctLoginPass","isAuth","setAuthUserData","type","payload","setAuth","logout","dispatch","localStorage","removeItem","authReducer","state","action","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","style","formSummaryError","mainButton","connect","auth","email","password","stopSubmit","_error","loginWithToken","loginWithTokenAC","getItem","to","formstyle","formData","OTPReduxForm","confirmSMS","SMSPassword","Math","random","toString","setItem","alert","instance","axios","baseURL","pokemonsAPI","currentPage","pageSize","subtype","get","then","response","pokemonId","data","pokemon","pokemonPageReducer","Preloader","preloaderBody","preloader","src","alt","Header","header","routeBack","backBtn","loginBlock","onClick","PokemonPage","card","fullPokemonInfo","pokemonPage","imageUrl","pokemonInfo","mainInfo","types","extraInfo","undefined","attacks","damage","cost","resistances","evolvesFrom","attacksDescription","PokemonPageContainer","this","match","params","id","history","push","getPokemonPage","refreshPokemonPage","prevProps","React","Component","compose","a","withRouter","SET_POKEMONS","pokemons","subtypes","selectedType","selectedSubtype","totalPokemonsCount","isFetching","followingInProgress","toggleIsFetching","pokemonsReducer","getPokemons","pokemonsPage","getPokemonTypes","getPokemonSubtypes","getSelectedType","getSelectedSubtype","getPageSize","getTotalPokemonsCount","getCurrentPage","getIsFetching","Filter","filter","onChange","e","setSelect","target","choosenValue","filterName","hidden","items","map","item","key","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","ceil","pages","i","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","s","p","selectedPage","pagesNumber","Pokemon","artist","Pokemons","body","filters","setType","setSubtype","pagedcards","cards","length","PokemonsContainer","pageNumber","requestPokemons","setCurrentPage","page","dataPokemons","dataTypes","dataSubtypes","headers","isAith","exact","path","render","OtpPage","Boolean","window","location","hostname","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,qGCA3BD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,MAAQ,6BAA6B,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,WAAa,oC,mBCAlQD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,WAAa,6BAA6B,MAAQ,wBAAwB,QAAU,0BAA0B,KAAO,uBAAuB,SAAW,6B,0JCGjMC,EAAU,SAAAA,GAAO,OAAI,YAAmD,IAAhDC,EAA+C,EAA/CA,MAA+C,IAAxCC,KAAOC,EAAiC,EAAjCA,QAAUC,EAAuB,EAAvBA,MAAWC,EAAY,gCAEnEC,EAAWH,GAAWC,EAE5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,6BACI,kBAAC,EAAD,iBAAaH,EAAWI,KAE3BC,GAAY,8BAAOF,MAOnBM,GAFWV,EAAQ,YAEXA,EAAQ,UAEhBW,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CV,EAA3C,uDAAmD,GAAIW,EAAvD,uDAA8D,GAA9D,OACvB,yBAAKT,UAAWC,IAAOS,OACvB,+BAAQL,GACR,kBAACM,EAAA,EAAD,eAAON,YAAaA,EAAaC,KAAMA,EAAMM,SAAUL,EAAYC,UAAWA,GAAeV,IAF7F,IAEwGW,ICzB/FI,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qB,eCGPC,EAAe,CACfC,MAAO,KACPC,MAAO,KACPC,kBAAkB,EAClBC,QAAQ,GAoBCC,EAAkB,SAACJ,EAAOE,GAAR,MAA8B,CACzDG,KA7BkB,qBA8BlBC,QAAS,CAAEN,QAAOE,sBAGTK,EAAU,SAACJ,EAAQF,GAAT,MAAoB,CACvCI,KAjCa,gBAkCbC,QAAS,CAAEH,SAAQF,WAgCVO,EAAS,kBAAO,SAACC,GAC1BA,EAASL,EAAgB,MAAM,IAC/BK,EAASF,GAAQ,EAAO,OACxBG,aAAaC,WAAW,WAObC,EAlEK,WAAmC,IAAlCC,EAAiC,uDAAzBd,EAAce,EAAW,uCAElD,OAAQA,EAAOT,MAEX,IAfc,qBAgBd,IAfS,gBAgBT,IAfiB,wBAgBb,OAAO,2BACAQ,GACAC,EAAOR,SAGlB,QACI,OAAOO,ICFbE,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAfL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcrC,EAAW,EAAXA,MAC9B,OACI,0BAAMsC,SAAUD,GACP9B,EAAY,QAAS,QAAS,CAACS,GAAWV,GAC1CC,EAAY,WAAY,WAAY,CAACS,GAAWV,EAAO,CAACkB,KAAM,aAElExB,GAAS,yBAAKG,UAAYoC,IAAMC,kBAC5BxC,GAGD,4BAAQG,UAAWoC,IAAME,YAAzB,cAmCDC,eALS,SAACV,GAAD,MAAW,CAC/BV,OAAQU,EAAMW,KAAKrB,OACnBD,iBAAkBW,EAAMW,KAAKtB,oBAGO,CAAEF,MDTrB,SAACyB,EAAOC,GAAR,OAAsB,SAACjB,GAEpCA,EADS,iBAAVgB,GAAyC,aAAbC,EAClBtB,EAAgBqB,GAAO,GAEvBE,YAAW,QAAS,CAAEC,OAAQ,+BCKEC,eDqBnB,SAAC5B,GAAD,OAAW,SAACQ,GACtCA,EApC4B,SAACT,EAAOC,GAAR,MAAmB,CAC/CI,KArCqB,wBAsCrBC,QAAS,CAAEL,QAAOD,QAAOG,QAAQ,EAAMD,kBAAkB,IAkChD4B,CAAiB,eAAgB7B,OCtB/BsB,EA5BD,SAACzC,GAUX,OAJI4B,aAAaqB,QAAQ,UACrBjD,EAAM+C,eAAenB,aAAaqB,QAAQ,UAG1CjD,EAAMoB,kBAAoBpB,EAAMqB,OACzB,kBAAC,IAAD,CAAU6B,GAAI,cAGrBlD,EAAMoB,iBACC,kBAAC,IAAD,CAAU8B,GAAI,gBAGlB,yBAAKhD,UAAWoC,IAAMa,WACzB,kBAAClB,EAAD,CAAgBI,SAjBH,SAACe,GACdpD,EAAMkB,MAAMkC,EAAST,MAAOS,EAASR,iBCJvCS,EAAenB,YAAU,CAAEC,KAAM,OAAlBD,EAhBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcrC,EAAY,EAAZA,MAC7B,OACI,0BAAMsC,SAAUD,GACX9B,EAAY,gBAAiB,WAAY,CAACS,GAAWV,GAErDN,GAAS,yBAAKG,UAAWoC,IAAMC,kBAC3BxC,GAGL,6BACI,4BAAQG,UAAWoC,IAAME,YAAzB,eAgCDC,eALS,SAACV,GAAD,MAAY,CAChCV,OAAQU,EAAMW,KAAKrB,OACnBD,iBAAkBW,EAAMW,KAAKtB,oBAGO,CAAEkC,WFEhB,SAACC,GAAD,OAAkB,SAAC5B,GACzC,GAAmB,WAAhB4B,EAA0B,CACzB,IAAIpC,EAAQS,aAAaqB,QAAQ,SAC7B9B,IACAA,EAAQqC,KAAKC,SAASC,WACtB9B,aAAa+B,QAAQ,QAASxC,IAGlCQ,EAASF,GAAQ,EAAMN,SAGvBQ,EAASkB,YAAW,MAAO,CAAEC,OAAQ,yBACrCc,MAAM,oCEdCnB,EAxBC,SAACzC,GAMb,OAAKA,EAAMoB,iBAIPpB,EAAMqB,OACC,kBAAC,IAAD,CAAU6B,GAAI,cAGlB,yBAAKhD,UAAWoC,IAAMa,WACzB,kBAACE,EAAD,CAAchB,SAbD,SAACe,GACdpD,EAAMsD,WAAWF,EAASR,cAInB,kBAAC,IAAD,CAAUM,GAAI,c,gEChCvBW,E,OAAWC,OAAa,CAC1BC,QAAQ,kCAGCC,EAAc,WAC0C,IAArDC,EAAoD,uDAAtC,EAAGC,EAAmC,uDAAxB,EAAG3C,EAAqB,uDAAhB,GAAI4C,EAAY,uDAAJ,GACxD,OAAON,EAASO,IAAT,qBAA2BH,EAA3B,qBAAmDC,EAAnD,kBAAqE3C,EAArE,oBAAqF4C,IACvFE,MAAK,SAAAC,GACF,OAAOA,MAJVN,EAAc,SAQZO,GACP,OAAOV,EAASO,IAAT,gBAAsBG,IACxBF,MAAK,SAAAC,GACF,OAAOA,EAASE,SAXnBR,EAAc,WAgBnB,OAAOH,EAASO,IAAT,SACFC,MAAK,SAAAC,GACF,OAAOA,EAASE,SAlBnBR,EAAc,WAuBnB,OAAOH,EAASO,IAAT,YACFC,MAAK,SAAAC,GACF,OAAOA,EAASE,SC3B5BvD,EAAe,CACfwD,QAAS,MAyBEC,EAtBY,WAAmC,IAAlC3C,EAAiC,uDAAzBd,EAAce,EAAW,uCAEzD,OAAQA,EAAOT,MAEX,IAViB,+BAWb,OAAO,2BACAQ,GADP,IAEI0C,QAASzC,EAAOyC,UAGxB,QACI,OAAO1C,I,mCCTJ4C,EANC,WACZ,OAAO,yBAAKzE,UAAWoC,IAAMsC,eACjB,yBAAK1E,UAAWoC,IAAMuC,UAAWC,IAAKD,IAAWE,IAAK,iB,yBCevDC,EAjBA,SAAChF,GACZ,OACI,4BAAQE,UAAWoC,IAAM2C,QACnBjF,EAAMkF,UAAY,yBAAKhF,UAAWoC,IAAM6C,SACtC,kBAAC,IAAD,CAASjC,GAAIlD,EAAMkF,WAAW,4BAAQ3D,KAAK,SAASrB,UAAU,6BAAhC,YAG9B,8BACJ,yBAAKA,UAAWoC,IAAM8C,YAClB,kBAAC,IAAD,CAASlC,GAAG,UAAS,4BAAQ3B,KAAK,SAASrB,UAAU,4BAA4BmF,QAASrF,EAAM0B,QAA3E,e,kBCRxB4D,GAAc,SAACtF,GAExB,IAAIyE,EAAUzE,EAAMuF,KACpB,OAAKd,EAKD,yBAAKvE,UAAWoC,KAAMkD,iBAClB,kBAAC,EAAD,CAAQ9D,OAAQ1B,EAAM0B,OAAQwD,UAAW,cACzC,yBAAKhF,UAAWoC,KAAMmD,aAClB,yBAAKX,IAAKL,EAAQiB,SAAUX,IAAI,YAChC,yBAAK7E,UAAWoC,KAAMqD,aAClB,yBAAKzF,UAAWoC,KAAMsD,UAClB,6BAAK,2CAAL,IAA0BnB,EAAQjE,MAClC,6BAAK,mCAAL,IAAkBiE,EAAQoB,OAC1B,6BAAK,sCAAL,IAAqBpB,EAAQN,UAEjC,yBAAKjE,UAAWoC,KAAMwD,gBACGC,IAApBtB,EAAQuB,QAAwB,6BAC7B,6BAAK,2CAAL,KAA2BvB,EAAQuB,QAAQ,GAAGC,QAC9C,6BAAK,yCAAL,KAAyBxB,EAAQuB,QAAQ,GAAGE,OACvC,UAEgBH,IAAxBtB,EAAQ0B,YACL,6BAAK,0CAAL,KAA0B1B,EAAQ0B,YAAY,GAAG5E,KAAjD,KAAyDkD,EAAQ0B,YAAY,GAAGnF,MAAhF,KACE,KAEN,6BAAK,0CAAL,KAA0ByD,EAAQ2B,qBAIzBL,IAApBtB,EAAQuB,QACL,yBAAK9F,UAAWoC,KAAM+D,oBAAqB5B,EAAQuB,QAAQ,GAAGrF,MAC5D,MA9BH,kBAAC,EAAD,OCCT2F,G,mLAGF,IAAI/B,EAAYgC,KAAKvG,MAAMwG,MAAMC,OAAOC,GACnCH,KAAKvG,MAAMqB,QACdkF,KAAKvG,MAAM2G,QAAQC,KAAK,UAE1BL,KAAKvG,MAAM6G,eAAetC,K,0CAI1BgC,KAAKO,uB,yCAGYC,GACbR,KAAKvG,MAAMwG,MAAMC,OAAOC,KAAOK,EAAUP,MAAMC,OAAOC,IACxDH,KAAKO,uB,+BAKP,OACE,kBAAC,GAAD,iBAAiBP,KAAKvG,MAAMyE,QAA5B,CAAqC/C,OAAQ6E,KAAKvG,MAAM0B,c,GAtB3BsF,IAAMC,WAgC1BC,eACbzE,aANoB,SAACV,GAAD,MAAY,CAChC0C,QAAS1C,EAAM0D,YAAYhB,QAC3BpD,OAAQU,EAAMW,KAAKrB,UAIM,CAAEwF,eJlBC,SAACtC,GAAD,8CAAe,WAAO5C,GAAP,eAAAwF,EAAA,sEACpBnD,EAAuBO,GADH,OACrCD,EADqC,OAEzC3C,EAJwC,CAAEJ,KArBrB,+BAqB6CkD,QAI1CH,IAFiB,2CAAf,uDIkBe5C,WAC3C0F,IAFaF,CAGbZ,IC3CIe,GAAe,4BASjBpG,GAAe,CACfqG,SAAU,GACVzB,MAAO,GACP0B,SAAU,GACVC,aAAc,GACdC,gBAAiB,GACjBvD,SAAU,EACVwD,mBAAoB,EACpBzD,YAAa,EACb0D,YAAY,EACZC,oBAAqB,IAsDZC,GAAmB,SAACF,GAAD,MAAiB,CAAEpG,KApExB,kCAoEkDoG,eAiB9DG,GApES,WAAmC,IAAlC/F,EAAiC,uDAAzBd,GAAce,EAAW,uCAEtD,OAAQA,EAAOT,MAEX,KAAK8F,GACD,OAAO,2BACAtF,GADP,IAEIuF,SAAUtF,EAAOsF,WAGzB,IA/BoB,mCAgChB,OAAO,2BACAvF,GADP,IAEI8D,MAAO7D,EAAO6D,MACd0B,SAAUvF,EAAOuF,WAGzB,IAjCoB,oCAkChB,OAAO,2BACAxF,GADP,IAEIyF,aAAcxF,EAAOwF,aACrBC,gBAAiBzF,EAAOyF,kBAGhC,IA3CiB,gCA4Cb,OAAO,2BACA1F,GADP,IAEIkC,YAAajC,EAAOiC,cAG5B,IAhDyB,wCAiDrB,OAAO,2BACAlC,GADP,IAEI2F,mBAAoB1F,EAAO0F,qBAEnC,IApDmB,kCAqDf,OAAO,2BACA3F,GADP,IAEI4F,WAAY3F,EAAO2F,aAG3B,QACI,OAAO5F,IClENgG,GAAc,SAAChG,GACxB,OAAOA,EAAMiG,aAAaV,UAGjBW,GAAkB,SAAClG,GAC5B,OAAOA,EAAMiG,aAAanC,OAGjBqC,GAAqB,SAACnG,GAC/B,OAAOA,EAAMiG,aAAaT,UAGjBY,GAAkB,SAACpG,GAC5B,OAAOA,EAAMiG,aAAaR,cAGjBY,GAAqB,SAACrG,GAC/B,OAAOA,EAAMiG,aAAaP,iBAGjBY,GAAc,SAACtG,GACxB,OAAOA,EAAMiG,aAAa9D,UAGjBoE,GAAwB,SAACvG,GAClC,OAAOA,EAAMiG,aAAaN,oBAGjBa,GAAiB,SAACxG,GAC3B,OAAOA,EAAMiG,aAAa/D,aAGjBuE,GAAgB,SAACzG,GAC1B,OAAOA,EAAMiG,aAAaL,Y,qBC9BjBc,GAAS,SAACzI,GAEnB,OACI,yBAAKE,UAAWoC,KAAMoG,QAClB,4BAAQC,SAAU,SAACC,GAAD,OAAM5I,EAAM6I,UAAUD,EAAEE,OAAO9H,QAAQA,MAAOhB,EAAM+I,aAAe/I,EAAM+I,aAAe/I,EAAMgJ,YAC5G,4BAAQC,QAAM,EAACjI,MAAOhB,EAAMgJ,YAAahJ,EAAMgJ,YAClDhJ,EAAMkJ,MACNC,KAAI,SAAAC,GACD,OAAO,4BAAQC,IAAOD,EAAMpI,MAAOoI,GAA5B,IAAqCA,EAArC,W,8BCwBRE,GAhCC,SAAC,GAIb,IAJ4F,IAA9EC,EAA6E,EAA7EA,gBAAiBrF,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAauF,EAAqC,EAArCA,cAAqC,IAArBC,mBAAqB,MAAP,EAAO,EAEvFC,EAAalG,KAAKmG,KAAKJ,EAAkBrF,GACzC0F,EAAQ,GACHC,EAAI,EAAGA,GAAKH,EAAYG,IAC7BD,EAAMhD,KAAKiD,GAGf,IAAIC,EAAetG,KAAKmG,KAAKD,EAAaD,GARiD,EASnDM,mBAAS,GAT0C,oBAStFC,EATsF,KASvEC,EATuE,KAUvFC,GAAyBF,EAAgB,GAAKP,EAAc,EAC5DU,EAAyBH,EAAgBP,EAM7C,OAJGK,GAAiBE,EAAgBF,GAChCG,EAAiBH,GAGd,yBAAK5J,UAAWkK,KAAER,OACpBI,EAAgB,GACjB,4BAAQ9J,UAAU,4BAA4BmF,QAAW,WAAO4E,EAAiBD,EAAe,KAAhG,QACKJ,EACAlB,QAAO,SAAA2B,GAAC,OAAIA,GAAKH,GAAyBG,GAAKF,KAC/ChB,KAAI,SAAAkB,GACD,OAAO,0BAAMhB,IAAOgB,EAAGnK,UAAW+D,IAAgBoG,EAAID,KAAEE,aAAeF,KAAEG,YACrElF,QAAS,SAACuD,GAAQY,EAAca,KAD7B,IACsCA,EADtC,QAGVP,EAAeE,GAAiB,4BAAQ9J,UAAU,4BACnDmF,QAAW,WAAO4E,EAAiBD,EAAgB,KADlB,U,oBCzBhCQ,GAAU,SAAC,GAAiB,IAAf/F,EAAc,EAAdA,QACtB,OAAO,yBAAK4E,IAAK5E,EAAQiC,GAAIxG,UAAU,iBACnC,yBAAKA,UAAWkK,KAAE7E,MACd,8BACI,kBAAC,IAAD,CAASrC,GAAI,YAAcuB,EAAQiC,IAC/B,yBAAKxG,UAAU,eAAe4E,IAAKL,EAAQiB,SAAUX,IAAI,cAIjE,8BACI,0BAAM7E,UAAWkK,KAAEzE,aACf,yBAAKzF,UAAU,cAAa,2BAAIuE,EAAQjE,OACxC,yBAAKN,UAAU,aAAf,IAA6BuE,EAAQgG,OAArC,UCTPC,GAAW,SAAC1K,GAErB,OAAO,6BACH,kBAAC,EAAD,CAAQ0B,OAAQ1B,EAAM0B,OAAQwD,UAAU,KACxC,yBAAKhF,UAAWoC,KAAMqI,MAClB,yBAAKzK,UAAWoC,KAAMsI,SAClB,kBAAC,GAAD,CAAQ1B,MAAOlJ,EAAM6F,MAAOmD,WAAW,OAAOH,UAAW7I,EAAM6K,QAAS9B,aAAc/I,EAAMwH,eAC5F,kBAAC,GAAD,CAAQ0B,MAAOlJ,EAAMuH,SAAUyB,WAAW,UAAUH,UAAW7I,EAAM8K,WAAY/B,aAAc/I,EAAMyH,mBAEzG,yBAAKvH,UAAWoC,KAAMyI,YAClB,yBAAK7K,UAAWoC,KAAM0I,OACY,IAA1BhL,EAAMsH,SAAS2D,OACfjL,EAAMsH,SAAS6B,KAAI,SAAA1E,GAAO,OAAI,kBAAC,GAAD,CAASA,QAASA,EAAS4E,IAAK5E,EAAQiC,QACxE,qHACwB1G,EAAMiE,YAD9B,MAIN,kBAAC,GAAD,CAAWA,YAAajE,EAAMiE,YAAasF,gBAAiBvJ,EAAM0H,mBAC9DxD,SAAUlE,EAAMkE,SAAUsF,cAAexJ,EAAMwJ,oBCX7D0B,G,4MAUF1B,cAAgB,SAAC2B,GAAgB,IAAD,EACoB,EAAKnL,MAAhDkE,EADuB,EACvBA,SAAUuD,EADa,EACbA,gBAAiBD,EADJ,EACIA,aAChC,EAAKxH,MAAMoL,gBAAgBD,EAAYjH,EAAUsD,EAAcC,GAC/D,EAAKzH,MAAMqL,eAAeF,I,EAG9BN,QAAU,SAACtJ,GAAU,IAAD,EAC+B,EAAKvB,MAA/CiE,EADW,EACXA,YAAaC,EADF,EACEA,SAAUuD,EADZ,EACYA,gBAC5B,EAAKzH,MAAMoL,gBAAgBnH,EAAaC,EAAU3C,EAAMkG,I,EAG5DqD,WAAa,SAAC3G,GAAa,IAAD,EACsB,EAAKnE,MAA5CiE,EADiB,EACjBA,YAAaC,EADI,EACJA,SAAUsD,EADN,EACMA,aAC5B,EAAKxH,MAAMoL,gBAAgBnH,EAAaC,EAAUsD,EAAcrD,I,kEApB3DoC,KAAKvG,MAAMqB,QACZkF,KAAKvG,MAAM2G,QAAQC,KAAK,UAFZ,MAI6CL,KAAKvG,MAA7DiE,EAJW,EAIXA,YAAaC,EAJF,EAIEA,SAAUuD,EAJZ,EAIYA,gBAAiBD,EAJ7B,EAI6BA,aAC7CjB,KAAKvG,MAAMoL,gBAAgBnH,EAAaC,EAAUsD,EAAcC,K,+BAoBhE,OAAO,oCACFlB,KAAKvG,MAAM2H,WAAa,kBAAC,EAAD,MAAgB,KACzC,kBAAC,GAAD,CAAUD,mBAAoBnB,KAAKvG,MAAM0H,mBACrCxD,SAAUqC,KAAKvG,MAAMkE,SACrBD,YAAasC,KAAKvG,MAAMiE,YACxBuF,cAAejD,KAAKiD,cACpBlC,SAAUf,KAAKvG,MAAMsH,SACrBzB,MAAOU,KAAKvG,MAAM6F,MAClB0B,SAAUhB,KAAKvG,MAAMuH,SACrB7F,OAAQ6E,KAAKvG,MAAM0B,OACnBmJ,QAAStE,KAAKsE,QACdC,WAAYvE,KAAKuE,WACjBtD,aAAcjB,KAAKvG,MAAMwH,aACzBC,gBAAiBlB,KAAKvG,MAAMyH,uB,GAxCZT,IAAMC,WA4DvBC,eACXzE,aAhBkB,SAACV,GACnB,MAAO,CACHuF,SAAUS,GAAYhG,GACtB8D,MAAOoC,GAAgBlG,GACvBwF,SAAUW,GAAmBnG,GAC7BmC,SAAUmE,GAAYtG,GACtB2F,mBAAoBY,GAAsBvG,GAC1CkC,YAAasE,GAAexG,GAC5B4F,WAAYa,GAAczG,GAC1ByF,aAAcW,GAAgBpG,GAC9B0F,gBAAiBW,GAAmBrG,GACpCV,OAAQU,EAAMW,KAAKrB,UAKE,CAAEgK,eNFD,SAACpH,GAAD,MAAkB,CAAE1C,KApEzB,gCAoEiD0C,gBME3BmH,gBNIhB,SAACE,EAAMpH,EAAU3C,EAAM4C,GAAvB,8CAAmC,WAAOxC,GAAP,mBAAAwF,EAAA,6DAC9DxF,EAASkG,IAAiB,IADoC,SAErC7D,EAAwBsH,EAAMpH,EAAU3C,EAAM4C,GAFT,cAE1DoH,EAF0D,gBAGxCvH,IAHwC,cAG1DwH,EAH0D,gBAIrCxH,IAJqC,OAI1DyH,EAJ0D,OAK9D9J,EAASkG,IAAiB,IAC1BlG,GAfwB2F,EAeHiE,EAAa/G,KAAKwG,MAfD,CAAEzJ,KAAM8F,GAAcC,cAgB5D3F,GAf8BkE,EAeH2F,EAAU3F,MAfA0B,EAeOkE,EAAalE,SAfN,CAAEhG,KApE7B,mCAoEwDsE,QAAO0B,cAgBvF5F,EAXiE,CAACJ,KApE1C,oCAoEsEiG,aAWlEjG,EAXgFkG,gBAW1EtD,IAElCxC,EAf0D,CAAEJ,KApE/B,wCAoE+DmG,mBAe7D6D,EAAaG,QAAQ,iBAVU,kCAL7B,IAHH7F,EAAO0B,EADbD,IASsC,OAAnC,uDMJiC5F,WAC5D0F,IAFWF,CAGbgE,IClDF,IAIezI,gBAJS,SAACV,GAAD,MAAY,CAClC4J,OAAQ5J,EAAMW,KAAKrB,UAGNoB,EAtBf,SAAazC,GAEX,OACE,yBAAKE,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO0L,OAAK,EAACC,KAAK,IAAIC,OACpB,kBAAM9L,EAAMqB,OAAS,kBAAC,IAAD,CAAU6B,GAAI,cAAkB,kBAAC,IAAD,CAAUA,GAAI,cAErE,kBAAC,IAAD,CAAO2I,KAAK,gBAAgBC,OAAQ,kBAAK,kBAAC,GAAD,SACzC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,cAAcnL,UAAWqL,IACrC,kBAAC,IAAD,CAAOF,KAAO,IAAIC,OAAS,kBAAI,sDCTrBE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3F,MACvB,2D,wBCTF4F,GAAWC,YAAgB,CAC3BrE,aAAcF,GACdrC,YAAaf,EACbhC,KAAMZ,EACNK,KAAMmK,OAGJC,GAAmBN,OAAOO,sCAAwCtF,IAGzDuF,GAFDC,YAAYN,GAAUG,GAAiBI,YAAgBC,QCRrEC,IAASf,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUW,MAAOA,IACf,kBAAC,GAAD,QAGJK,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7I,MAAK,SAAA8I,GACJA,EAAaC,gBAEdC,OAAM,SAAAtN,GACLuN,QAAQvN,MAAMA,EAAMwN,a,mBGxI5B9N,EAAOC,QAAU,CAAC,YAAc,iCAAiC,gBAAkB,qCAAqC,YAAc,iCAAiC,mBAAqB,wCAAwC,SAAW,8BAA8B,UAAY,iC,mBCAzRD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,WAAa,2BAA2B,SAAW,2B,mBCAvID,EAAOC,QAAU,CAAC,aAAe,gCAAgC,MAAQ,yBAAyB,YAAc,+BAA+B,SAAW,8B,mBCA1JD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,iCAAiC,OAAS,6B","file":"static/js/main.708e85d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.691884b0.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2NgZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formstyle\":\"FormsControls_formstyle__3-zhl\",\"field\":\"FormsControls_field__3CL9f\",\"formControl\":\"FormsControls_formControl__3lBOb\",\"error\":\"FormsControls_error__1GgNm\",\"formSummaryError\":\"FormsControls_formSummaryError__2Dms8\",\"mainButton\":\"FormsControls_mainButton__2ZqJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Pokemons_body__giwcN\",\"pagedcards\":\"Pokemons_pagedcards__1SJz4\",\"cards\":\"Pokemons_cards__3QcpW\",\"filters\":\"Pokemons_filters__1aBXZ\",\"card\":\"Pokemons_card__3dIKM\",\"blinking\":\"Pokemons_blinking__2D7x-\"};","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst Element = Element => ({ input, meta: {touched , error}, ...props }) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = Element('textarea');\r\n\r\nexport const Input = Element('input');\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div className={styles.field}>\r\n    <label>{placeholder}</label>\r\n    <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} /> {text}\r\n    </div>)","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n","import { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_AUTH = 'auth/SET_AUTH';\r\nconst LOGIN_WITH_TOKEN = 'auth/LOGIN_WITH_TOKEN';\r\n\r\nlet initialState = {\r\n    login: null,\r\n    token: null,\r\n    correctLoginPass: false,\r\n    isAuth: false, \r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n        case SET_AUTH:\r\n        case LOGIN_WITH_TOKEN:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (login, correctLoginPass) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { login, correctLoginPass }\r\n});\r\n\r\nexport const setAuth = (isAuth, token) => ({\r\n    type: SET_AUTH,\r\n    payload: { isAuth, token }\r\n});\r\n\r\nexport const loginWithTokenAC = (login, token) => ({\r\n    type: LOGIN_WITH_TOKEN,\r\n    payload: { token, login, isAuth: true, correctLoginPass: true }\r\n});\r\n\r\nexport const login = (email, password) =>  (dispatch) => {\r\n    if(email === \"kode@kode.ru\" && password === \"Enk0deng\"){\r\n        dispatch(setAuthUserData(email, true));\r\n    }  else {\r\n        dispatch(stopSubmit('login', { _error: \"Wrong login or password\" }));\r\n    }\r\n}\r\n\r\nexport const confirmSMS = (SMSPassword) =>  (dispatch) => {\r\n    if(SMSPassword === \"123456\" ){\r\n        let token = localStorage.getItem('token');\r\n        if(!token){\r\n            token = Math.random().toString();\r\n            localStorage.setItem('token', token);\r\n        }\r\n   \r\n        dispatch(setAuth(true, token));\r\n\r\n    }  else {\r\n        dispatch(stopSubmit('OTP', { _error: \"Wrong code from SMS\" }));\r\n        alert(\"Correct password is '123456'.\");\r\n    }\r\n}\r\n\r\nexport const logout = () =>  (dispatch) =>  {\r\n    dispatch(setAuthUserData(null, false));\r\n    dispatch(setAuth(false, null));\r\n    localStorage.removeItem('token');\r\n}\r\n\r\nexport const loginWithToken = (token) => (dispatch) => {\r\n    dispatch(loginWithTokenAC(\"kode@kode.ru\", token));\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\nimport { login, loginWithToken } from '../../redux/auth-reducer';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField('Login', 'email', [required], Input)}\r\n                {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n\r\n            {error && <div className ={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n                <button className={style.mainButton}>&#8594;</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password)\r\n    }\r\n\r\n    if (localStorage.getItem('token')){\r\n        props.loginWithToken(localStorage.getItem('token'));\r\n      } \r\n\r\n    if (props.correctLoginPass && props.isAuth) {\r\n        return <Redirect to={'/pokemons'} />\r\n    }\r\n\r\n    if (props.correctLoginPass) {\r\n        return <Redirect to={'/SMSconfirm'} />\r\n    }\r\n\r\n    return <div className={style.formstyle}>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth,\r\n    correctLoginPass: state.auth.correctLoginPass,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, loginWithToken })(Login);","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\nimport { confirmSMS } from '../../redux/auth-reducer';\r\n\r\nconst OTPForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Code from SMS', 'password', [required], Input)}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className={style.mainButton}>&#8594;</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst OTPReduxForm = reduxForm({ form: 'OTP' })(OTPForm)\r\n\r\nconst OtpPage = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.confirmSMS(formData.password)\r\n    }\r\n\r\n    if (!props.correctLoginPass) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/pokemons'} />\r\n    }\r\n\r\n    return <div className={style.formstyle}>\r\n        <OTPReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    correctLoginPass: state.auth.correctLoginPass\r\n})\r\n\r\nexport default connect(mapStateToProps, { confirmSMS })(OtpPage);","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://api.pokemontcg.io/v1/`\r\n});\r\n\r\nexport const pokemonsAPI = {\r\n    getPokemons(currentPage = 1, pageSize = 4, type='', subtype='') {\r\n        return instance.get(`cards?page=${currentPage}&pageSize=${pageSize}&types=${type}&subtype=${subtype}`)\r\n            .then(response => {\r\n                return response;\r\n            });\r\n    },\r\n\r\n    getPokemon(pokemonId) {\r\n        return instance.get(`cards/${pokemonId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getPokemonTypes(){\r\n        return instance.get(`types`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getPokemonSubtypes(){\r\n        return instance.get(`subtypes`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n}\r\n\r\n","import { pokemonsAPI } from \"../api/api\";\r\n\r\nconst SET_POKEMON_PAGE = 'profilePage/SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    pokemon: null\r\n};\r\n\r\nconst pokemonPageReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_POKEMON_PAGE:\r\n            return {\r\n                ...state,\r\n                pokemon: action.pokemon\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemonPage = (pokemon) => ({ type: SET_POKEMON_PAGE, pokemon });\r\n\r\nexport const getPokemonPage = (pokemonId) => async (dispatch) => {\r\n    let response = await pokemonsAPI.getPokemon(pokemonId);\r\n    dispatch(setPokemonPage(response));\r\n}\r\n\r\nexport default pokemonPageReducer;","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\nimport style from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return <div className={style.preloaderBody}>\r\n                <img className={style.preloader} src={preloader} alt ='loaging...'/>\r\n            </div> \r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            { props.routeBack ? <div className={style.backBtn}>\r\n                <NavLink to={props.routeBack}><button type=\"button\" className=\"btn btn-outline-secondary\">\r\n                    &lt; Back</button></NavLink>\r\n            </div> :\r\n                <div></div>}\r\n            <div className={style.loginBlock} >\r\n                <NavLink to='/login'><button type=\"button\" className=\"btn btn-outline-secondary\" onClick={props.logout}>\r\n                    Log out\r\n                </button></NavLink>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Header from '../Header/Header';\r\nimport style from './PokemonPage.module.css';\r\n\r\nexport const PokemonPage = (props) => {\r\n\r\n    let pokemon = props.card;\r\n    if (!pokemon) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={style.fullPokemonInfo}>\r\n            <Header logout={props.logout} routeBack={'/pokemons'} />\r\n            <div className={style.pokemonPage}>\r\n                <img src={pokemon.imageUrl} alt=\"pokemon\" />\r\n                <div className={style.pokemonInfo}>\r\n                    <div className={style.mainInfo}>\r\n                        <div><b>Pokemon name</b> {pokemon.name}</div>\r\n                        <div><b>Type</b> {pokemon.types}</div>\r\n                        <div><b>SubType</b> {pokemon.subtype}</div>\r\n                    </div>\r\n                    <div className={style.extraInfo}>\r\n                        {pokemon.attacks !== undefined ? <div>\r\n                            <div><b>attackDamage</b>  {pokemon.attacks[0].damage}</div>\r\n                            <div><b>attackCost</b>  {pokemon.attacks[0].cost}</div>\r\n                        </div> : null\r\n                        }\r\n                        {pokemon.resistances !== undefined ?\r\n                            <div><b>resistances</b>  {pokemon.resistances[0].type}: {pokemon.resistances[0].value} </div>\r\n                            : null\r\n                        }\r\n                        <div><b>evolvesFrom</b>  {pokemon.evolvesFrom}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {pokemon.attacks !== undefined ?\r\n                <div className={style.attacksDescription}>{pokemon.attacks[0].text}</div>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nimport { getPokemonPage } from '../../redux/pokemonPage-reducer';\r\nimport { PokemonPage } from './PokemonPage';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass PokemonPageContainer extends React.Component {\r\n\r\n  refreshPokemonPage() {\r\n    let pokemonId = this.props.match.params.id;\r\n    if (!this.props.isAuth) {\r\n      this.props.history.push('/login');\r\n    }\r\n    this.props.getPokemonPage(pokemonId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshPokemonPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.id !== prevProps.match.params.id) {\r\n      this.refreshPokemonPage();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PokemonPage {...this.props.pokemon} logout={this.props.logout} />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  pokemon: state.pokemonPage.pokemon,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getPokemonPage, logout }),\r\n  withRouter,\r\n)(PokemonPageContainer);","import { pokemonsAPI } from \"../api/api\";\r\n\r\nconst SET_POKEMONS = 'pokemonsPage/SET_POKEMONS';\r\nconst SET_POKEMON_FILTERS = 'pokemonsPage/SET_POKEMON_FILTERS';\r\n\r\nconst SET_CURRENT_PAGE = 'pokemonsPage/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_POKEMONS_COUNT = 'pokemonsPage/SET_TOTAL_POKEMONS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'pokemonsPage/TOGGLE_IS_FETCHING';\r\nconst SET_SELECTED_FILTERS ='pokemonsPage/SET_SELECTED_FILTERS';\r\n\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    types: [],\r\n    subtypes: [],\r\n    selectedType: '',\r\n    selectedSubtype: '',\r\n    pageSize: 4,\r\n    totalPokemonsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst pokemonsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.pokemons\r\n            };\r\n\r\n        case SET_POKEMON_FILTERS:\r\n            return {\r\n                ...state,\r\n                types: action.types,\r\n                subtypes: action.subtypes\r\n            };\r\n\r\n        case SET_SELECTED_FILTERS:\r\n            return {\r\n                ...state,\r\n                selectedType: action.selectedType,\r\n                selectedSubtype: action.selectedSubtype\r\n            };\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n\r\n        case SET_TOTAL_POKEMONS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalPokemonsCount: action.totalPokemonsCount\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setPokemons = (pokemons) => ({ type: SET_POKEMONS, pokemons });\r\nexport const setPokemonFilters = (types, subtypes) => ({ type: SET_POKEMON_FILTERS, types, subtypes });\r\n\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalPokemonsCount = (totalPokemonsCount) => ({ type: SET_TOTAL_POKEMONS_COUNT, totalPokemonsCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const setSelectedFilters = (selectedType, selectedSubtype) =>({type: SET_SELECTED_FILTERS, selectedType, selectedSubtype});\r\n\r\n\r\nexport const requestPokemons = (page, pageSize, type, subtype) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let dataPokemons = await pokemonsAPI.getPokemons(page, pageSize, type, subtype);\r\n    let dataTypes = await pokemonsAPI.getPokemonTypes(); \r\n    let dataSubtypes = await pokemonsAPI.getPokemonSubtypes();\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setPokemons(dataPokemons.data.cards));\r\n    dispatch(setPokemonFilters(dataTypes.types, dataSubtypes.subtypes));\r\n    dispatch(setSelectedFilters(type, subtype));\r\n\r\n    dispatch(setTotalPokemonsCount(dataPokemons.headers['total-count']));\r\n}\r\n\r\nexport default pokemonsReducer;","export const getPokemons = (state) => {\r\n    return state.pokemonsPage.pokemons;\r\n}\r\n\r\nexport const getPokemonTypes = (state) => {\r\n    return state.pokemonsPage.types;\r\n}\r\n\r\nexport const getPokemonSubtypes = (state) => {\r\n    return state.pokemonsPage.subtypes;\r\n}\r\n\r\nexport const getSelectedType = (state) => {\r\n    return state.pokemonsPage.selectedType;\r\n}\r\n\r\nexport const getSelectedSubtype = (state) => {\r\n    return state.pokemonsPage.selectedSubtype;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.pokemonsPage.pageSize;\r\n}\r\n\r\nexport const getTotalPokemonsCount = (state) => {\r\n    return state.pokemonsPage.totalPokemonsCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.pokemonsPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.pokemonsPage.isFetching;\r\n}\r\n","import React from 'react';\r\nimport style from './Filter.module.css';\r\n\r\nexport const Filter = (props) =>{\r\n\r\n    return (\r\n        <div className={style.filter}>\r\n            <select onChange={(e)=> props.setSelect(e.target.value)} value={props.choosenValue ? props.choosenValue : props.filterName}>\r\n                <option hidden value={props.filterName}>{props.filterName}</option>\r\n            {props.items\r\n            .map(item => {\r\n                return <option key = {item} value={item} > {item} </option>\r\n            })}\r\n            </select>\r\n        </div>\r\n    );\r\n}","import React, { useState }  from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged,  portionSize = 5}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    if(portionCount  && portionNumber > portionCount){\r\n        setPortionNumber(portionCount);\r\n    } \r\n\r\n    return <div className={s.pages}>\r\n        {portionNumber > 1 && \r\n        <button className=\"btn btn-outline-secondary\" onClick = {() => {setPortionNumber(portionNumber -1)}}>&laquo;</button>}\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\r\n            .map(p => {\r\n                return <span key = {p} className={currentPage === p ? s.selectedPage : s.pagesNumber}\r\n                    onClick={(e) => { onPageChanged(p); }}> {p} </span>\r\n            })}\r\n            {portionCount > portionNumber && <button className=\"btn btn-outline-secondary\" \r\n            onClick = {() => {setPortionNumber(portionNumber + 1)}} >\r\n            &raquo;</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../Pokemons.module.css';\r\n\r\nexport const Pokemon = ({ pokemon }) => {\r\n    return <div key={pokemon.id} className='card bg-light'>\r\n        <div className={s.card}>\r\n            <span>\r\n                <NavLink to={'/pokemon/' + pokemon.id} >\r\n                    <img className=\"card-img-top\" src={pokemon.imageUrl} alt='pokemon' />\r\n                </NavLink>\r\n            </span>\r\n\r\n            <span>\r\n                <span className={s.pokemonInfo}>\r\n                    <div className=\"card-title\"><b>{pokemon.name}</b></div>\r\n                    <div className='card-text'> {pokemon.artist} </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport { Filter } from '../common/Filter/Filter';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport Header from '../Header/Header';\r\nimport { Pokemon } from './Pokemon/Pokemon';\r\nimport style from './Pokemons.module.css';\r\n\r\nexport const Pokemons = (props) => {\r\n\r\n    return <div>\r\n        <Header logout={props.logout} routeBack='' />\r\n        <div className={style.body}>\r\n            <div className={style.filters}>\r\n                <Filter items={props.types} filterName=\"Type\" setSelect={props.setType} choosenValue={props.selectedType} />\r\n                <Filter items={props.subtypes} filterName=\"Subtype\" setSelect={props.setSubtype} choosenValue={props.selectedSubtype} />\r\n            </div>\r\n            <div className={style.pagedcards}>\r\n                <div className={style.cards}>\r\n                    {   props.pokemons.length !== 0 ?\r\n                        props.pokemons.map(pokemon => <Pokemon pokemon={pokemon} key={pokemon.id} />)\r\n                    : <div>No pokemons with these filters! Try to change filters or pages. \r\n                        Your current page is {props.currentPage}.</div>\r\n                    }\r\n                </div>\r\n                <Paginator currentPage={props.currentPage} totalItemsCount={props.totalPokemonsCount}\r\n                    pageSize={props.pageSize} onPageChanged={props.onPageChanged} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setCurrentPage, requestPokemons } from '../../redux/pokemons-reducer';\r\n\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getPokemons, getPageSize, getTotalPokemonsCount, getCurrentPage, \r\n    getIsFetching, getPokemonTypes, getPokemonSubtypes, \r\n    getSelectedType, getSelectedSubtype } from '../../redux/pokemons-selector';\r\nimport { Pokemons } from './Pokemons';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\n\r\nclass PokemonsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.isAuth) {\r\n            this.props.history.push('/login');\r\n        }\r\n        let {currentPage, pageSize, selectedSubtype, selectedType} = this.props;\r\n        this.props.requestPokemons(currentPage, pageSize, selectedType, selectedSubtype);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize, selectedSubtype, selectedType} = this.props;\r\n        this.props.requestPokemons(pageNumber, pageSize, selectedType, selectedSubtype);\r\n        this.props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n    setType = (type) => {\r\n        let {currentPage, pageSize, selectedSubtype} = this.props;\r\n        this.props.requestPokemons(currentPage, pageSize, type, selectedSubtype);\r\n    }\r\n\r\n    setSubtype = (subtype) => {\r\n        let {currentPage, pageSize, selectedType} = this.props;\r\n        this.props.requestPokemons(currentPage, pageSize, selectedType, subtype);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Pokemons totalPokemonsCount={this.props.totalPokemonsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                pokemons={this.props.pokemons}\r\n                types={this.props.types}\r\n                subtypes={this.props.subtypes}\r\n                logout={this.props.logout}\r\n                setType={this.setType}\r\n                setSubtype={this.setSubtype}\r\n                selectedType={this.props.selectedType}\r\n                selectedSubtype={this.props.selectedSubtype} />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: getPokemons(state),\r\n        types: getPokemonTypes(state),\r\n        subtypes: getPokemonSubtypes(state),\r\n        pageSize: getPageSize(state),\r\n        totalPokemonsCount: getTotalPokemonsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        selectedType: getSelectedType(state),\r\n        selectedSubtype: getSelectedSubtype(state),\r\n        isAuth: state.auth.isAuth\r\n    };\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setCurrentPage, requestPokemons, logout }),\r\n    withRouter\r\n)(PokemonsContainer)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login  from './components/Login/Login';\nimport OtpPage from './components/OTP/OTP';\nimport PokemonPageContainer from './components/PokemonPage/PokemonPageContainer';\nimport PokemonsContainer from './components/Pokemons/PokemonsContainer';\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path='/' render={ \n            () => props.isAuth ? <Redirect to={'/pokemons'} /> : <Redirect to={'/login'} />\n          } />\n          <Route path='/pokemon/:id?' render={()=> <PokemonPageContainer />} />\n          <Route path='/pokemons' render={() => <PokemonsContainer/>} />\n          <Route path='/login' render={() => <Login />} />\n          <Route path='/SMSconfirm' component={OtpPage} />\n          <Route path = '*' render= {()=><div>404 NOT FOUND</div>} />\n        </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  isAith: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from \"./auth-reducer\";\r\nimport pokemonsReducer from \"./pokemons-reducer\";\r\nimport pokemonPageReducer from \"./pokemonPage-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    pokemonsPage: pokemonsReducer,\r\n    pokemonPage: pokemonPageReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonPage\":\"PokemonPage_pokemonPage__eSNxr\",\"fullPokemonInfo\":\"PokemonPage_fullPokemonInfo__1L4ei\",\"pokemonInfo\":\"PokemonPage_pokemonInfo__2fn8a\",\"attacksDescription\":\"PokemonPage_attacksDescription__3d2P4\",\"mainInfo\":\"PokemonPage_mainInfo__366a-\",\"extraInfo\":\"PokemonPage_extraInfo__iGO7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__107il\",\"backBtn\":\"Header_backBtn__3KTOU\",\"loginBlock\":\"Header_loginBlock__2l26M\",\"blinking\":\"Header_blinking__gF8fF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1jiz-\",\"pages\":\"Paginator_pages__1IgW2\",\"pagesNumber\":\"Paginator_pagesNumber__2o3PY\",\"blinking\":\"Paginator_blinking__1AHKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1wTDC\",\"preloaderBody\":\"Preloader_preloaderBody__370Kx\",\"appear\":\"Preloader_appear__S-6xx\"};"],"sourceRoot":""}